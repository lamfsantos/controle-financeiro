services:
  flutter-app:
    build: ./flutter
    ports:
      - "8000:8000"
    networks:
      - app-network
    environment:
    - WEB_PORT=8000
      
  flask-app:
    build: ./flask  # Path to your Flask app's Dockerfile
    container_name: flask-app
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=development
      - MYSQL_HOST=mysql  # Refers to MySQL service by name
      - MYSQL_USER=root   # Or whatever username you set
      - MYSQL_PASSWORD=example
      - MYSQL_DB=controle_financeiro
    depends_on:
      - mysql  # Ensure that MySQL starts before Flask
    command: ["./wait-mysql.sh", "mysql", "python", "app.py"]  # Wait for MySQL to be ready
    volumes:
      - ./wait-mysql.sh:/app/wait-for-mysql.sh  # Mount the wait script
  redis:
    image: "redis:alpine"

  mysql:
    image: mysql:8.0  # You can change the version if needed
    container_name: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=example
      - MYSQL_DATABASE=controle_financeiro  # Optional: Auto-create a database
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql  # Persist MySQL data

networks:
  app-network:
    driver: bridge

volumes:
  mysql_data:  # Declare volume for persistent MySQL storage